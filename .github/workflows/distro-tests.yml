name: tests for common distros

on:
  workflow_dispatch:
  schedule:
    - cron:  '42 3 * * *'

jobs:
  distro-tests:
    name: Build tests for PHP ${{ matrix.php-version }} on ${{ matrix.distro.name }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro:
          - name: CentOS 7
            image: centos:7
            pkg: yum
          - name: CentOS 8
            image: centos:8
            pkg: yum
          - name: Archlinux
            image: archlinux
            pkg: pacman
          - name: Alpine
            image: alpine
            pkg: apk
          - name: Alpine Edge
            image: alpine:edge
            pkg: apk
          - name: openSUSE Leap
            image: opensuse/leap
            pkg: zypper
          - name: openSUSE Tumbleweed
            image: opensuse/tumbleweed
            pkg: zypper
        php-version: [ '8.0', '7.4', '7.3' ]
      fail-fast: false
    steps:
      - name: Prepare Swow codes
        uses: actions/checkout@v2
        with:
          path: swow
      - name: Prepare cache PHP source
        id: cacheprepare
        run: |
          echo "::set-output name=phpfn::"`curl 'https://www.php.net/releases/?json&version=${{ matrix.php-version }}' | jq -r '.source[] | select( .filename | endswith("tar.xz")) | .filename'`
      - name: Cache PHP codes
        uses: actions/cache@v2
        with:
          key: phpcode-v2-${{steps.cacheprepare.outputs.phpfn}}
          path: |
            ${{steps.cacheprepare.outputs.phpfn}}
      - name: Prepare PHP codes
        run: |
          fn=${{steps.cacheprepare.outputs.phpfn}}
          if [ ! -f "$fn" ]
          then
            wget https://www.php.net/distributions/${fn}
          fi
          mkdir php-src
          tar xf ${fn} -C php-src --strip-components=1
      - name: Build things
        run: |
          docker run --rm --name testcontainer \
            --cap-add=SYS_NICE \
            --cap-add=IPC_LOCK \
            -v `realpath php-src`:/src/php-src:rw,rshared \
            -v `realpath swow`:/src/swow:rw,rshared \
            -v `realpath swow/.github/workflows/distro-installer.sh`:/distro-installer.sh:ro \
            -e CI=true \
            ${{ matrix.distro.image }} /distro-installer.sh ${{ matrix.distro.pkg }}
